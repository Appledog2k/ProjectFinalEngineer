@using Microsoft.EntityFrameworkCore
@using System.Data

@inject AppDbContext dbContext
@{
    ViewData["Title"] = "Thông tin Db";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var can_Connect = dbContext.Database.CanConnect();
}
<partial name="_AlertMessage"></partial>
<h1>Thông tin</h1>
<h2>Thông tin cơ bản.</h2>
<p>Database: @dbName</p><br>
<p>
    Source:@connect.DataSource
</p><br>
<p>State: @connect.State</p><br>
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p><br>
}
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p><br>
}
@if (!can_Connect)
{
    <p class="alert alert-danger">Không có khả năng kết nối tới Database</p>
}
@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button class="btn btn-success" asp-action="Migrate">Tạo Db (Cập nhật migration)</button>
    </form>
}
@if (can_Connect)
{
    <h2> Các Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");

    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>
    <a class="btn btn-danger" asp-action="DeleteDb">Xóa Database: @dbName</a>
    <a class="btn btn-danger" asp-action="SeedData">Seed Data</a>
}
